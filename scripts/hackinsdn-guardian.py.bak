#!/usr/bin/env python3
import os
import sys
import json
import time
from pygtail import Pygtail

if len(sys.argv) < 2:
    print(f"USAGE: {sys.argv[0]} <SURICATA-EVE-FILE> [n-run] [interval]")
    sys.exit(1)

n_run=float("inf")
if len(sys.argv) >= 3:
    n_run=float(sys.argv[2])
run_interval=10
if len(sys.argv) >= 4:
    run_interval=int(sys.argv[3])

suricata_eve = sys.argv[1]
active_blocks_file = f"{suricata_eve}.active_blocks"
script_dir = os.path.dirname(os.path.realpath(__file__))
block_duration = 60

def process_events():
    lines_interest = []
    for line in Pygtail(suricata_eve):
        if '"event_type":"alert"' not in line:
            continue
        lines_interest.append(line)

    events_by_src = {}
    for line in lines_interest:
        event = json.loads(line)
        idx = str(event.get("vlan", ["untagged"])[0]) + "---" + event["src_ip"]
        #print(f"process event {idx}")
        events_by_src.setdefault(idx, [])
        events_by_src[idx].append(event)

    active_blocks = {}
    if os.path.isfile(active_blocks_file):
        active_blocks = json.load(open(active_blocks_file))

    cur_time = time.time()
    old_blocks = dict(active_blocks)
    for key, value in events_by_src.items():
        if key not in old_blocks:
            vlan, src_ip = key.split("---")
            os.system(f"{script_dir}/block.sh {vlan} {src_ip}")
        old_blocks.pop(key, None)
        active_blocks[key] = {"expire": cur_time + block_duration}

    for key, value in old_blocks.items():
        if value["expire"] < cur_time:
            vlan, src_ip = key.split("---")
            os.system(f"{script_dir}/unblock.sh {vlan} {src_ip}")
            active_blocks.pop(key)

    with open(active_blocks_file, 'w') as f:
        json.dump(active_blocks, f)

while n_run > 0:
    process_events()
    time.sleep(run_interval)
    n_run -= 1
